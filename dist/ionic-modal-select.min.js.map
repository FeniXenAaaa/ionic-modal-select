{"version":3,"sources":["webpack:///ionic-modal-select.min.js","webpack:///webpack/bootstrap 110d47953f9fc4d10616","webpack:///./src/main.js","webpack:///./src/ionic-modal-select.js","webpack:///./src/modal-template-multiple.html","webpack:///./src/modal-template.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","compile","$compile","scope","iElement","iAttrs","x","$watch","$eval","value","html","contents","compileOnce","modalSelect","$ionicModal","$ionicConfig","$timeout","$filter","$parse","$templateCache","modalTemplateMultiple","modalTemplate","restrict","require","initialOptions","optionGetter","searchFilters","searchProperties","onSelect","onSearch","onReset","onClose","link","ngModelController","transclude","initialOptionsSetup","nv","multiple","allOptions","map","item","idx","angular","copy","options","updateListMode","useCollectionRepeat","shortList","length","shortListBreak","ui","parseInt","setFromProperty","optionProperty","onOptionSelect","clearSearchOnSelect","isChecked","multipleNullValue","modalTitle","okButton","hideReset","resetButton","cancelButton","backButtonText","backButton","text","backButtonIcon","icon","loadListMessage","modalClass","hideFooter","headerFooterClass","selectedClass","itemClass","searchTemplate","hasSearch","searchValue","searchPlaceholder","subHeaderClass","cancelSearchButton","optionsExpression","match","Error","listExpr","listGetter","s","ov","$watchCollection","opt","querySelector","name","message","toString","this","inner","element","Element","prototype","remove","parentNode","removeChild","notFound","$render","$viewValue","getSelectedValue","option","val","undefined","setOption","oldValue","$setViewValue","newValue","modal","hide","then","showList","setFilter","filterId","forEach","filter","active","query","unsetValue","isFunction","setValues","checkedItems","v","k","push","oldValues","vals","unsetValues","closeModal","compareValues","a","b","equals","modalTpl","fromTemplate","get","hiddenCb","$on","on","show","whatToSearch","filteredOpts","actual","expected","_typeof","i","toLowerCase","indexOf","oldLen","newOpts","originalItem","find","it","clearSearch","copyOpt","$inject","Symbol","iterator","obj","constructor","directive"],"mappings":"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","file":"ionic-modal-select.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(1);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tcompile.$inject = [\"$compile\"];\n\tmodalSelect.$inject = [\"$ionicModal\", \"$ionicConfig\", \"$timeout\", \"$filter\", \"$parse\", \"$templateCache\"];\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * Copyright 2015 Inmagik SRL.\n\t * http://www.inmagik.com/\n\t *\n\t * ionic-modal-select, v1.3.2\n\t * Modal select directive for Ionic framework.\n\t *\n\t * By @bianchimro\n\t *\n\t * Licensed under the MIT license. Please see LICENSE for more information.\n\t *\n\t */\n\t\n\tangular.module('ionic-modal-select', []).directive('compile', compile).directive('modalSelect', modalSelect);\n\t\n\tfunction compile($compile) {\n\t\treturn function (scope, iElement, iAttrs) {\n\t\t\tvar x = scope.$watch(function (scope) {\n\t\t\t\t// watch the 'compile' expression for changes\n\t\t\t\treturn scope.$eval(iAttrs.compile);\n\t\t\t}, function (value) {\n\t\t\t\t// when the 'compile' expression changes\n\t\t\t\t// assign it into the current DOM\n\t\t\t\tiElement.html(value);\n\t\n\t\t\t\t// compile the new DOM and link it to the current\n\t\t\t\t// scope.\n\t\t\t\t// NOTE: we only compile .childNodes so that\n\t\t\t\t// we don't get into infinite loop compiling ourselves\n\t\t\t\t$compile(iElement.contents())(scope);\n\t\n\t\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\n\t\t\t\tif (iAttrs.compileOnce === 'true') {\n\t\t\t\t\tx();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\t\n\tfunction modalSelect($ionicModal, $ionicConfig, $timeout, $filter, $parse, $templateCache) {\n\t\n\t\tvar modalTemplateMultiple = __webpack_require__(2);\n\t\tvar modalTemplate = __webpack_require__(3);\n\t\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\trequire: 'ngModel',\n\t\t\tscope: {\n\t\t\t\tinitialOptions: \"=options\",\n\t\t\t\toptionGetter: \"&\",\n\t\t\t\tsearchFilters: \"=searchFilters\",\n\t\t\t\tsearchProperties: '=',\n\t\t\t\tonSelect: \"&\",\n\t\t\t\tonSearch: \"&\",\n\t\t\t\tonReset: \"&\",\n\t\t\t\tonClose: \"&\"\n\t\t\t},\n\t\t\tlink: function link(scope, iElement, iAttrs, ngModelController, transclude) {\n\t\n\t\t\t\tvar shortList = true;\n\t\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\n\t\t\t\tvar setFromProperty = iAttrs.optionProperty;\n\t\t\t\tvar onOptionSelect = iAttrs.optionGetter;\n\t\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\n\t\t\t\tvar searchProperties = scope.searchProperties ? scope.searchProperties : false;\n\t\n\t\t\t\t//multiple values settings.\n\t\t\t\tvar multiple = iAttrs.multiple ? true : false;\n\t\t\t\tif (multiple) {\n\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t}\n\t\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\n\t\n\t\t\t\tscope.ui = {\n\t\t\t\t\tmodalTitle: iAttrs.modalTitle || 'Select an option',\n\t\t\t\t\tokButton: iAttrs.okButton || 'OK',\n\t\t\t\t\thideReset: iAttrs.hideReset !== \"true\" ? false : true,\n\t\t\t\t\tresetButton: iAttrs.resetButton || 'Reset',\n\t\t\t\t\tcancelButton: iAttrs.cancelButton || 'Cancel',\n\t\t\t\t\tbackButtonText: $ionicConfig.backButton.text(),\n\t\t\t\t\tbackButtonIcon: $ionicConfig.backButton.icon(),\n\t\t\t\t\tloadListMessage: iAttrs.loadListMessage || 'Loading',\n\t\t\t\t\tmodalClass: iAttrs.modalClass || '',\n\t\t\t\t\thideFooter: iAttrs.hideFooter !== \"true\" ? false : true,\n\t\t\t\t\theaderFooterClass: iAttrs.headerFooterClass || 'bar-stable',\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tselectedClass: iAttrs.selectedClass || 'option-selected',\n\t\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\n\t\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\n\t\n\t\t\t\t\t//search stuff\n\t\t\t\t\thasSearch: iAttrs.hasSearch !== \"true\" ? false : true,\n\t\t\t\t\tsearchValue: '',\n\t\t\t\t\tsearchPlaceholder: iAttrs.searchPlaceholder || 'Search',\n\t\t\t\t\tsubHeaderClass: iAttrs.subHeaderClass || 'bar-stable',\n\t\t\t\t\tcancelSearchButton: iAttrs.cancelSearchButton || 'Clear'\n\t\n\t\t\t\t};\n\t\n\t\t\t\tvar allOptions = [];\n\t\t\t\tscope.options = [];\n\t\n\t\t\t\tif (iAttrs.optionsExpression) {\n\t\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\n\t\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" + \"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\n\t\t\t\t\t}\n\t\t\t\t\t//var keyExpr = match[1];\n\t\t\t\t\tvar listExpr = match[2];\n\t\t\t\t\tvar listGetter = $parse(listExpr);\n\t\t\t\t\tvar s = iElement.scope();\n\t\n\t\t\t\t\tscope.$watch(function () {\n\t\t\t\t\t\treturn listGetter(s);\n\t\t\t\t\t}, function (nv, ov) {\n\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t}, true);\n\t\t\t\t} else {\n\t\t\t\t\tscope.$watchCollection('initialOptions', function (nv) {\n\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\t//#TODO: this is due to different single vs multiple template\n\t\t\t\t//but adds lots of complexity here and in search\n\t\t\t\tfunction initialOptionsSetup(nv) {\n\t\t\t\t\tnv = nv || [];\n\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\tallOptions = angular.copy(nv);\n\t\t\t\t\t\tscope.options = angular.copy(nv);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallOptions = nv.map(function (item, idx) {\n\t\t\t\t\t\t\treturn [idx, angular.copy(item)];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tscope.options = angular.copy(allOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// getting options template\n\t\t\t\tvar opt = iElement[0].querySelector('.option');\n\t\t\t\tif (!opt) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tname: 'modalSelectError:noOptionTemplate',\n\t\t\t\t\t\tmessage: 'When using modalSelect directive you must include an element with class \"option\"\\n\\t\\t\\t\\t\\t\\t to provide a template for your select options.',\n\t\t\t\t\t\ttoString: function toString() {\n\t\t\t\t\t\t\treturn this.name + \" \" + this.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tscope.inner = angular.element(opt).html();\n\t\n\t\t\t\t//add support for .remove for older devices\n\t\t\t\tif (!('remove' in Element.prototype)) {\n\t\t\t\t\tElement.prototype.remove = function () {\n\t\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tangular.element(opt).remove();\n\t\n\t\t\t\tvar notFound = iElement[0].querySelector('.not-found');\n\t\t\t\tif (notFound) {\n\t\t\t\t\tscope.notFound = angular.element(notFound).html();\n\t\t\t\t\tangular.element(notFound).remove();\n\t\t\t\t}\n\t\n\t\t\t\tfunction updateListMode() {\n\t\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\n\t\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\n\t\t\t\t\t\tshortList = false;\n\t\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\n\t\t\t\t\t\tshortList = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof scope.options !== \"undefined\") {\n\t\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t}\n\t\n\t\t\t\tngModelController.$render = function () {\n\t\t\t\t\tscope.ui.value = ngModelController.$viewValue;\n\t\t\t\t};\n\t\n\t\t\t\tvar getSelectedValue = scope.getSelectedValue = function (option) {\n\t\t\t\t\tvar val = null;\n\t\t\t\t\tif (option === null || option === undefined) {\n\t\t\t\t\t\treturn option;\n\t\t\t\t\t}\n\t\t\t\t\tif (onOptionSelect) {\n\t\t\t\t\t\treturn scope.optionGetter({ option: option });\n\t\t\t\t\t}\n\t\t\t\t\tif (setFromProperty) {\n\t\t\t\t\t\tval = option[setFromProperty];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = option;\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t};\n\t\n\t\t\t\tscope.setOption = function (option) {\n\t\t\t\t\tvar oldValue = ngModelController.$viewValue;\n\t\t\t\t\tvar val = getSelectedValue(option);\n\t\t\t\t\tngModelController.$setViewValue(val);\n\t\t\t\t\tngModelController.$render();\n\t\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\t// Filter object {id: <filterId>, active: <boolean>}\n\t\t\t\t// Used as auxiliary query params when querying server for search results\n\t\t\t\tscope.setFilter = function (filterId) {\n\t\t\t\t\tangular.forEach(scope.searchFilters, function (filter) {\n\t\t\t\t\t\tif (filter.id == filterId) {\n\t\t\t\t\t\t\tfilter.active = !filter.active;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilter.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// Trigger another search when the search filters change\n\t\t\t\t\tif (scope.onSearch) {\n\t\t\t\t\t\tscope.onSearch({ query: scope.ui.searchValue });\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tscope.unsetValue = function () {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tngModelController.$setViewValue(\"\");\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.setValues = function () {\n\t\t\t\t\tvar checkedItems = [];\n\t\t\t\t\tangular.forEach(scope.isChecked, function (v, k) {\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tcheckedItems.push(allOptions[k][1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar oldValues = ngModelController.$viewValue;\n\t\t\t\t\tvar vals = checkedItems.map(function (item) {\n\t\t\t\t\t\treturn getSelectedValue(item);\n\t\t\t\t\t});\n\t\t\t\t\tngModelController.$setViewValue(vals);\n\t\t\t\t\tngModelController.$render();\n\t\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.unsetValues = function () {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.closeModal = function () {\n\t\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\n\t\t\t\tscope.compareValues = function (a, b) {\n\t\t\t\t\treturn angular.equals(a, b);\n\t\t\t\t};\n\t\n\t\t\t\t//loading the modal\n\t\t\t\tvar modalTpl = null;\n\t\t\t\tif (iAttrs.searchTemplate) {\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate($templateCache.get(iAttrs.searchTemplate), { scope: scope });\n\t\t\t\t} else {\n\t\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(modalTpl, { scope: scope });\n\t\t\t\t}\n\t\n\t\t\t\tvar hiddenCb = null;\n\t\t\t\tscope.$on('$destroy', function () {\n\t\t\t\t\tif (hiddenCb) {\n\t\t\t\t\t\thiddenCb();\n\t\t\t\t\t\thiddenCb = null;\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.remove();\n\t\t\t\t});\n\t\n\t\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\n\t\t\t\t\thiddenCb = scope.$on('modal.hidden', function () {\n\t\t\t\t\t\tscope.onClose();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tiElement.on('click', function () {\n\t\t\t\t\tif (shortList) {\n\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\tscope.modal.show();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.modal.show().then(function () {\n\t\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t//filter function\n\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\tscope.$watch('ui.searchValue', function (nv) {\n\t\t\t\t\t\tvar whatToSearch;\n\t\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\t\twhatToSearch = allOptions;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twhatToSearch = allOptions.map(function (item) {\n\t\t\t\t\t\t\t\treturn item[1];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (iAttrs.onSearch) {\n\t\t\t\t\t\t\tscope.onSearch({ query: nv });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function (actual, expected) {\n\t\t\t\t\t\t\t\tif (!actual) {\n\t\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (searchProperties) {\n\t\t\t\t\t\t\t\t\tif ((typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) == 'object') {\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\tvar oldLen = scope.options.length;\n\t\t\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\t\t\tscope.options = filteredOpts;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//#TODO: lots of loops here!\n\t\t\t\t\t\t\t\tvar newOpts = [];\n\t\t\t\t\t\t\t\tangular.forEach(filteredOpts, function (item) {\n\t\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function (it) {\n\t\t\t\t\t\t\t\t\t\treturn it[1] == item;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (originalItem) {\n\t\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tscope.options = newOpts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (oldLen != scope.options.length) {\n\t\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tscope.clearSearch = function () {\n\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\tscope.copyOpt = function (option) {\n\t\t\t\t\treturn angular.copy(option);\n\t\t\t\t};\n\t\n\t\t\t\t//#TODO ?: WRAP INTO $timeout?\n\t\t\t\tngModelController.$render();\n\t\t\t}\n\t\t};\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <button class=\\\"button back-button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        <i class=\\\"icon {{::ui.backButtonIcon}}\\\"></i>\\n        <span class=\\\"default-title\\\">{{::ui.backButtonText}}</span>\\n      </button>\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n      </label>\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n    <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n        <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n        <p>\\n            <ion-spinner></ion-spinner>\\n        </p>\\n    </div>\\n\\n    <div ng-if=\\\"showList\\\">\\n        <!--collection-repeat mode -->\\n        <!-- not working right now -->\\n        <!--\\n        <div ng-if=\\\"!ui.shortList\\\" >\\n            <div class=\\\"list\\\" class=\\\"animate-if\\\" >\\n                <div\\n                    class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                     collection-repeat=\\\"optionm in options track by $index\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n\\n                    <div compile=\\\"inner\\\" ng-init=\\\"option=optionm[1]\\\" compile-once=\\\"false\\\"></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        -->\\n\\n        <!-- ng-repeat mode -->\\n        <div ng-if=\\\"ui.shortList || true\\\">\\n            <div class=\\\"list\\\">\\n                <div\\n                  class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                  ng-repeat=\\\"optionm in options track by optionm[0]\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n                    <div ng-init=\\\"option=optionm[1]\\\" compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ion-content>\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button class=\\\"button button-stable\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <div class=\\\"title\\\" style=\\\"padding-top:6px\\\">\\n            <button class=\\\"button button-navbar\\\" ng-click=\\\"setValues()\\\">OK</button>\\n        </div>\\n        <button ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValues()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n</ion-modal-view>\\n\"\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <button class=\\\"button back-button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        <i class=\\\"icon {{::ui.backButtonIcon}}\\\"></i>\\n        <span class=\\\"default-title\\\">{{::ui.backButtonText}}</span>\\n      </button>\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n      </label>\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n        <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n            <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n            <p>\\n                <ion-spinner></ion-spinner>\\n            </p>\\n        </div>\\n        <div ng-if=\\\"showList\\\">\\n            <div ng-if=\\\"!ui.shortList\\\">\\n                <div class=\\\"list\\\" ng-if=\\\"showList\\\" class=\\\"animate-if\\\">\\n                    <div\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\"\\n                      collection-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{'{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div ng-if=\\\"ui.shortList\\\">\\n                <div class=\\\"list\\\">\\n                    <div\\n                      ng-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div ng-if=\\\"notFound && options.length == 0\\\">\\n            <div compile=\\\"notFound\\\" compile-once=\\\"true\\\" ng-click=\\\"closeModal()\\\"></div>\\n        </div>\\n\\n    </ion-content>\\n\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\" ng-if=\\\"::!ui.hideFooter\\\">\\n        <button type=\\\"button\\\" class=\\\"button button-stable modal-select-close-button\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <button type=\\\"button\\\" ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValue()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n\\n</ion-modal-view>\\n\"\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ionic-modal-select.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 110d47953f9fc4d10616","import \"./ionic-modal-select.js\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/*!\n * Copyright 2015 Inmagik SRL.\n * http://www.inmagik.com/\n *\n * ionic-modal-select, v1.3.2\n * Modal select directive for Ionic framework.\n *\n * By @bianchimro\n *\n * Licensed under the MIT license. Please see LICENSE for more information.\n *\n */\n\nangular.module('ionic-modal-select', [])\n.directive('compile', compile)\n.directive('modalSelect', modalSelect);\n\n\nfunction compile($compile) {\n\treturn function(scope, iElement, iAttrs) {\n\t\tvar x = scope.$watch(\n\t\t\tfunction(scope) {\n\t\t\t\t// watch the 'compile' expression for changes\n\t\t\t\treturn scope.$eval(iAttrs.compile);\n\t\t\t},\n\t\t\tfunction(value) {\n\t\t\t\t// when the 'compile' expression changes\n\t\t\t\t// assign it into the current DOM\n\t\t\t\tiElement.html(value);\n\n\t\t\t\t// compile the new DOM and link it to the current\n\t\t\t\t// scope.\n\t\t\t\t// NOTE: we only compile .childNodes so that\n\t\t\t\t// we don't get into infinite loop compiling ourselves\n\t\t\t\t$compile(iElement.contents())(scope);\n\n\t\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\n\t\t\t\tif (iAttrs.compileOnce === 'true') {\n\t\t\t\t\tx();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n}\n\n\nfunction modalSelect($ionicModal, $ionicConfig, $timeout, $filter, $parse, $templateCache ) {\n\n\t\tconst modalTemplateMultiple = require('raw!./modal-template-multiple.html');\n\t\tconst modalTemplate = require('raw!./modal-template.html');\n\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\trequire : 'ngModel',\n\t\t\tscope: {\n\t\t\t\tinitialOptions:\"=options\",\n\t\t\t\toptionGetter:\"&\",\n\t\t\t\tsearchFilters: \"=searchFilters\",\n\t\t\t\tsearchProperties:'=',\n\t\t\t\tonSelect: \"&\",\n\t\t\t\tonSearch: \"&\",\n\t\t\t\tonReset: \"&\",\n\t\t\t\tonClose: \"&\",\n\t\t\t},\n\t\t\tlink: function (scope, iElement, iAttrs, ngModelController, transclude) {\n\n\t\t\t\tvar shortList = true;\n\t\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\n\t\t\t\tvar setFromProperty= iAttrs.optionProperty;\n\t\t\t\tvar onOptionSelect = iAttrs.optionGetter;\n\t\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\n\t\t\t\tvar searchProperties = scope.searchProperties  ? scope.searchProperties : false;\n\n\t\t\t\t//multiple values settings.\n\t\t\t\tvar multiple = iAttrs.multiple  ? true : false;\n\t\t\t\tif (multiple) {\n\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t}\n\t\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\n\n\t\t\t\tscope.ui = {\n\t\t\t\t\tmodalTitle : iAttrs.modalTitle || 'Select an option',\n\t\t\t\t\tokButton : iAttrs.okButton || 'OK',\n\t\t\t\t\thideReset : iAttrs.hideReset  !== \"true\" ? false : true,\n\t\t\t\t\tresetButton : iAttrs.resetButton || 'Reset',\n\t\t\t\t\tcancelButton : iAttrs.cancelButton || 'Cancel',\n\t\t\t\t\tbackButtonText: $ionicConfig.backButton.text(),\n\t\t\t\t\tbackButtonIcon: $ionicConfig.backButton.icon(),\n\t\t\t\t\tloadListMessage : iAttrs.loadListMessage || 'Loading',\n\t\t\t\t\tmodalClass : iAttrs.modalClass || '',\n\t\t\t\t\thideFooter: iAttrs.hideFooter !== \"true\" ? false : true,\n\t\t\t\t\theaderFooterClass : iAttrs.headerFooterClass || 'bar-stable',\n\t\t\t\t\tvalue  : null,\n\t\t\t\t\tselectedClass : iAttrs.selectedClass || 'option-selected',\n\t\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\n\t\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\n\n\t\t\t\t\t//search stuff\n\t\t\t\t\thasSearch : iAttrs.hasSearch  !== \"true\" ? false : true,\n\t\t\t\t\tsearchValue : '',\n\t\t\t\t\tsearchPlaceholder : iAttrs.searchPlaceholder || 'Search',\n\t\t\t\t\tsubHeaderClass : iAttrs.subHeaderClass || 'bar-stable',\n\t\t\t\t\tcancelSearchButton : iAttrs.cancelSearchButton || 'Clear'\n\n\t\t\t\t};\n\n\t\t\t\tvar allOptions = [];\n\t\t\t\tscope.options = [];\n\n\t\t\t\tif (iAttrs.optionsExpression) {\n\t\t\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\n\t\t\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//var keyExpr = match[1];\n\t\t\t\t\t\tvar listExpr = match[2];\n\t\t\t\t\t\tvar listGetter = $parse(listExpr);\n\t\t\t\t\t\tvar s = iElement.scope();\n\n\t\t\t\t\t\tscope.$watch(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\treturn listGetter(s);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(nv, ov) => {\n\t\t\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\n\t\t\t\t} else {\n\t\t\t\t\t\tscope.$watchCollection('initialOptions', function(nv){\n\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\t\t\t\tupdateListMode();\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//#TODO: this is due to different single vs multiple template\n\t\t\t\t//but adds lots of complexity here and in search\n\t\t\t\tfunction initialOptionsSetup(nv){\n\t\t\t\t\t\tnv = nv || [];\n\t\t\t\t\t\tif ( !multiple ) {\n\t\t\t\t\t\t\t\tallOptions = angular.copy(nv);\n\t\t\t\t\t\t\t\tscope.options = angular.copy(nv);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tallOptions = nv.map((item, idx) => [idx, angular.copy(item)] );\n\t\t\t\t\t\t\t\tscope.options = angular.copy(allOptions);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// getting options template\n\t\t\t\tvar opt = iElement[0].querySelector('.option');\n\t\t\t\tif (!opt) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tname:'modalSelectError:noOptionTemplate',\n\t\t\t\t\t\tmessage:`When using modalSelect directive you must include an element with class \"option\"\n\t\t\t\t\t\t to provide a template for your select options.`,\n\t\t\t\t\t\ttoString:function(){\n\t\t\t\t\t\t\treturn this.name + \" \" + this.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tscope.inner = angular.element(opt).html();\n\n\t\t\t\t//add support for .remove for older devices\n\t\t\t\tif (!('remove' in Element.prototype)) {\n\t\t\t\t\tElement.prototype.remove = function() {\n\t\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tangular.element(opt).remove();\n\n\t\t\t\tvar notFound = iElement[0].querySelector('.not-found');\n\t\t\t\tif(notFound) {\n\t\t\t\t\tscope.notFound = angular.element(notFound).html();\n\t\t\t\t\tangular.element(notFound).remove();\n\t\t\t\t}\n\n\t\t\t\tfunction updateListMode(){\n\t\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\n\t\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\n\t\t\t\t\t\tshortList = false;\n\t\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\n\t\t\t\t\t\tshortList = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof(scope.options) !==\"undefined\"){\n\t\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t}\n\n\t\t\t\tngModelController.$render = function(){\n\t\t\t\t\tscope.ui.value = ngModelController.$viewValue;\n\t\t\t\t};\n\n\t\t\t\tvar getSelectedValue = scope.getSelectedValue = function(option){\n\t\t\t\t\tvar val = null;\n\t\t\t\t\tif (option === null || option === undefined) {\n\t\t\t\t\t\treturn option;\n\t\t\t\t\t}\n\t\t\t\t\tif (onOptionSelect) {\n\t\t\t\t\t\treturn scope.optionGetter({option:option});\n\t\t\t\t\t}\n\t\t\t\t\tif (setFromProperty) {\n\t\t\t\t\t\tval = option[setFromProperty];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = option;\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t};\n\n\t\t\t\tscope.setOption = function(option){\n\t\t\t\t\tvar oldValue = ngModelController.$viewValue;\n\t\t\t\t\tvar val = getSelectedValue(option);\n\t\t\t\t\tngModelController.$setViewValue(val);\n\t\t\t\t\tngModelController.$render();\n\n\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\tif(clearSearchOnSelect) {\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t// Filter object {id: <filterId>, active: <boolean>}\n\t\t\t\t// Used as auxiliary query params when querying server for search results\n\t\t\t\tscope.setFilter = function(filterId) {\n\t\t\t\t\tangular.forEach(scope.searchFilters, function(filter) {\n\t\t\t\t\t\tif(filter.id == filterId) {\n\t\t\t\t\t\t\tfilter.active = !filter.active;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilter.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Trigger another search when the search filters change\n\t\t\t\t\tif(scope.onSearch) {\n\t\t\t\t\t\tscope.onSearch({query: scope.ui.searchValue});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tscope.unsetValue = function(){\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\tngModelController.$setViewValue(\"\");\n\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.setValues = function(){\n\t\t\t\t\t\tvar checkedItems = [];\n\t\t\t\t\t\tangular.forEach(scope.isChecked, function(v, k){\n\t\t\t\t\t\t\t\tif(v){\n\t\t\t\t\t\t\t\t\t\tcheckedItems.push(allOptions[k][1])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar oldValues = ngModelController.$viewValue;\n\t\t\t\t\t\tvar vals = checkedItems.map(function(item){\n\t\t\t\t\t\t\t\treturn getSelectedValue(item);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tngModelController.$setViewValue(vals);\n\t\t\t\t\t\tngModelController.$render();\n\n\t\t\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\t\t\t\t if(clearSearchOnSelect){\n\t\t\t\t\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t};\n\n\t\t\t\tscope.unsetValues = function(){\n\t\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\n\t\t\t\t\t\t\t\tngModelController.$render();\n\t\t\t\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.closeModal = function(){\n\t\t\t\t\tscope.modal.hide().then(function(){\n\t\t\t\t\t\tscope.showList = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\n\t\t\t\tscope.compareValues = function(a, b){\n\t\t\t\t\treturn angular.equals(a, b);\n\t\t\t\t};\n\n\t\t\t\t//loading the modal\n\t\t\t\tvar modalTpl = null;\n\t\t\t\tif(iAttrs.searchTemplate) {\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\n\t\t\t\t\t\t$templateCache.get(iAttrs.searchTemplate),\n\t\t\t\t\t\t{ scope: scope }\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\n\t\t\t\t\t\tmodalTpl,\n\t\t\t\t\t\t{ scope: scope }\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet hiddenCb = null;\n\t\t\t\tscope.$on('$destroy', function(){\n\t\t\t\t\tif(hiddenCb){\n\t\t\t\t\t\t\thiddenCb();\n\t\t\t\t\t\t\thiddenCb = null;\n\t\t\t\t\t}\n\t\t\t\t\tscope.modal.remove();\n\t\t\t\t});\n\n\t\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\n\t\t\t\t\thiddenCb = scope.$on('modal.hidden', function(){\n\t\t\t\t\t\tscope.onClose();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tiElement.on('click', function(){\n\t\t\t\t\tif (shortList) {\n\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\tscope.modal.show();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.modal.show()\n\t\t\t\t\t\t\t.then(function(){\n\t\t\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\t//filter function\n\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\tscope.$watch('ui.searchValue', function(nv){\n\t\t\t\t\t\tvar whatToSearch;\n\t\t\t\t\t\tif ( !multiple  ) {\n\t\t\t\t\t\t\t\twhatToSearch = allOptions;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twhatToSearch = allOptions.map(function(item){\n\t\t\t\t\t\t\t\t\t\treturn item[1];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(iAttrs.onSearch) {\n\t\t\t\t\t\t\t\tscope.onSearch({query: nv});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function(actual, expected) {\n\t\t\t\t\t\t\t\tif(!actual){\n\t\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (searchProperties){\n\t\t\t\t\t\t\t\t\tif (typeof actual == 'object'){\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++){\n\t\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0){\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif(actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0){\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tvar oldLen = scope.options.length;\n\t\t\t\t\t\t\tif ( !multiple ){\n\t\t\t\t\t\t\t\t\tscope.options = filteredOpts;\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//#TODO: lots of loops here!\n\t\t\t\t\t\t\t\t\tvar newOpts = [];\n\t\t\t\t\t\t\t\t\tangular.forEach(filteredOpts, function(item){\n\t\t\t\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function(it){\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn it[1] == item;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tif( originalItem ){\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tscope.options = newOpts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(oldLen != scope.options.length){\n\t\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tscope.clearSearch = function(){\n\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tscope.copyOpt = option => {\n\t\t\t\t\treturn angular.copy(option);\n\t\t\t\t}\n\n\t\t\t\t//#TODO ?: WRAP INTO $timeout?\n\t\t\t\tngModelController.$render();\n\n\t\t\t}\n\t\t};\n\t}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-modal-select.js","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <button class=\\\"button back-button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        <i class=\\\"icon {{::ui.backButtonIcon}}\\\"></i>\\n        <span class=\\\"default-title\\\">{{::ui.backButtonText}}</span>\\n      </button>\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n      </label>\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n    <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n        <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n        <p>\\n            <ion-spinner></ion-spinner>\\n        </p>\\n    </div>\\n\\n    <div ng-if=\\\"showList\\\">\\n        <!--collection-repeat mode -->\\n        <!-- not working right now -->\\n        <!--\\n        <div ng-if=\\\"!ui.shortList\\\" >\\n            <div class=\\\"list\\\" class=\\\"animate-if\\\" >\\n                <div\\n                    class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                     collection-repeat=\\\"optionm in options track by $index\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n\\n                    <div compile=\\\"inner\\\" ng-init=\\\"option=optionm[1]\\\" compile-once=\\\"false\\\"></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        -->\\n\\n        <!-- ng-repeat mode -->\\n        <div ng-if=\\\"ui.shortList || true\\\">\\n            <div class=\\\"list\\\">\\n                <div\\n                  class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\n                  ng-repeat=\\\"optionm in options track by optionm[0]\\\">\\n                    <label class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\n                    </label>\\n                    <div ng-init=\\\"option=optionm[1]\\\" compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ion-content>\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n        <button class=\\\"button button-stable\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <div class=\\\"title\\\" style=\\\"padding-top:6px\\\">\\n            <button class=\\\"button button-navbar\\\" ng-click=\\\"setValues()\\\">OK</button>\\n        </div>\\n        <button ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValues()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n</ion-modal-view>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template-multiple.html\n// module id = 2\n// module chunks = 0","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\n\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\n      <button class=\\\"button back-button button-clear\\\" ng-click=\\\"closeModal()\\\">\\n        <i class=\\\"icon {{::ui.backButtonIcon}}\\\"></i>\\n        <span class=\\\"default-title\\\">{{::ui.backButtonText}}</span>\\n      </button>\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\n    </ion-header-bar>\\n\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\n      <label class=\\\"item-input-wrapper\\\">\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\n      </label>\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\n        {{ ui.cancelSearchButton }}\\n      </button>\\n    </div>\\n\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\n        <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\n            <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\n            <p>\\n                <ion-spinner></ion-spinner>\\n            </p>\\n        </div>\\n        <div ng-if=\\\"showList\\\">\\n            <div ng-if=\\\"!ui.shortList\\\">\\n                <div class=\\\"list\\\" ng-if=\\\"showList\\\" class=\\\"animate-if\\\">\\n                    <div\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\"\\n                      collection-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{'{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div ng-if=\\\"ui.shortList\\\">\\n                <div class=\\\"list\\\">\\n                    <div\\n                      ng-repeat=\\\"option in options track by $index\\\"\\n                      ng-click=\\\"setOption(option)\\\"\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div ng-if=\\\"notFound && options.length == 0\\\">\\n            <div compile=\\\"notFound\\\" compile-once=\\\"true\\\" ng-click=\\\"closeModal()\\\"></div>\\n        </div>\\n\\n    </ion-content>\\n\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\" ng-if=\\\"::!ui.hideFooter\\\">\\n        <button type=\\\"button\\\" class=\\\"button button-stable modal-select-close-button\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\n        <button type=\\\"button\\\" ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValue()\\\">{{ui.resetButton}}</button>\\n    </ion-footer-bar>\\n\\n</ion-modal-view>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template.html\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}